"""updated schedule

Revision ID: 3b132075d15c
Revises: 917ad5ed6ecd
Create Date: 2025-02-16 20:25:05.534150

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3b132075d15c'
down_revision: Union[str, None] = '917ad5ed6ecd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.execute("DROP TABLE IF EXISTS schedules CASCADE")

    op.create_table('schedule_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='schedule_types_pkey')
    )

    op.create_table('shifts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIME(), nullable=False),
    sa.Column('end_time', postgresql.TIME(), nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='shifts_pkey')
    )

    op.create_table('schedules',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('shift_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assigned_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approved_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], name='schedules_approved_by_id_fkey'),
    sa.ForeignKeyConstraint(['assigned_by_id'], ['users.id'], name='schedules_assigned_by_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='schedules_user_id_fkey'),
    sa.ForeignKeyConstraint(['type_id'], ['schedule_types.id'], name='schedules_type_id_fkey'),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], name='schedules_shift_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='schedules_pkey')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usertype_roles',
    sa.Column('user_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='usertype_roles_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_type_id'], ['user_types.id'], name='usertype_roles_user_type_id_fkey')
    )
    op.create_table('items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_joined', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['item_types.id'], name='items_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='items_pkey')
    )
    op.create_table('schedules',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assigned_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approved_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], name='schedules_approved_by_id_fkey'),
    sa.ForeignKeyConstraint(['assigned_by_id'], ['users.id'], name='schedules_assigned_by_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='schedules_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='schedules_pkey')
    )
    op.create_table('document_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('document_types_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='document_types_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_taken', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_returned', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approved_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('requested_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], name='transactions_approved_by_id_fkey'),
    sa.ForeignKeyConstraint(['requested_by_id'], ['users.id'], name='transactions_requested_by_id_fkey'),
    sa.ForeignKeyConstraint(['type_id'], ['transaction_types.id'], name='transactions_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['user_types.id'], name='users_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey')
    )
    op.create_table('user_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_types_pkey')
    )
    op.create_table('item_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='item_types_pkey')
    )
    op.create_table('transaction_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='transaction_types_pkey')
    )
    op.create_table('documents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_joined', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['document_types.id'], name='documents_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='documents_pkey')
    )
    # ### end Alembic commands ###
