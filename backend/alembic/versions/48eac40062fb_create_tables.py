"""create tables

Revision ID: 48eac40062fb
Revises: 
Create Date: 2025-02-15 03:45:33.047611

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '48eac40062fb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'roles',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('name', sa.String(), unique=True, index=True),
        sa.Column('description', sa.Text()),
    )

    op.create_table(
        'user_types',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('name', sa.String(), unique=True, index=True),
        sa.Column('description', sa.Text()),
    )

    op.create_table(
        'usertype_roles',
        sa.Column('user_type_id', sa.Integer(), sa.ForeignKey('user_types.id')),
        sa.Column('role_id', sa.Integer(), sa.ForeignKey('roles.id')),
    )

    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('name', sa.String(), index=True),
        sa.Column('phone_number', sa.String(), unique=True, index=True),
        sa.Column('hashed_password', sa.String()),
        sa.Column('type_id', sa.Integer(), sa.ForeignKey('user_types.id')),
    )

    op.create_table(
        'schedules',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('date', sa.DateTime()),
        sa.Column('description', sa.Text()),
        sa.Column('type', sa.String()),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id')),
        sa.Column('assigned_by_id', sa.Integer(), sa.ForeignKey('users.id')),
        sa.Column('approved_by_id', sa.Integer(), sa.ForeignKey('users.id')),
    )

    op.create_table(
        'document_types',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('name', sa.String(), unique=True, index=True),
        sa.Column('description', sa.Text()),
    )

    op.create_table(
        'documents',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('name', sa.String(), index=True),
        sa.Column('type_id', sa.Integer(), sa.ForeignKey('document_types.id')),
        sa.Column('description', sa.Text()),
        sa.Column('quantity', sa.Integer()),
        sa.Column('date_joined', sa.DateTime(), server_default=sa.func.now()),
        sa.Column('date_updated', sa.DateTime(), onupdate=sa.func.now()),
    )

    op.create_table(
        'item_types',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('name', sa.String(), unique=True, index=True),
        sa.Column('description', sa.Text()),
    )

    op.create_table(
        'items',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('name', sa.String(), index=True),
        sa.Column('type_id', sa.Integer(), sa.ForeignKey('item_types.id')),
        sa.Column('description', sa.Text()),
        sa.Column('quantity', sa.Integer()),
        sa.Column('date_joined', sa.DateTime(), server_default=sa.func.now()),
        sa.Column('date_updated', sa.DateTime(), onupdate=sa.func.now()),
    )

    op.create_table(
        'transaction_types',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('name', sa.String(), unique=True, index=True),
        sa.Column('description', sa.Text()),
    )

    op.create_table(
        'transactions',
        sa.Column('id', sa.Integer(), primary_key=True, index=True),
        sa.Column('type_id', sa.Integer(), sa.ForeignKey('transaction_types.id')),
        sa.Column('description', sa.Text()),
        sa.Column('quantity', sa.Integer()),
        sa.Column('date_taken', sa.DateTime()),
        sa.Column('date_returned', sa.DateTime(), nullable=True),
        sa.Column('status', sa.String()),
        sa.Column('approved_by_id', sa.Integer(), sa.ForeignKey('users.id')),
        sa.Column('requested_by_id', sa.Integer(), sa.ForeignKey('users.id')),
    )

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('transaction_types')
    op.drop_table('items')
    op.drop_table('item_types')
    op.drop_table('documents')
    op.drop_table('document_types')
    op.drop_table('schedules')
    op.drop_table('users')
    op.drop_table('usertype_roles')
    op.drop_table('user_types')
    op.drop_table('roles')
    # ### end Alembic commands ###
